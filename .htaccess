# Marketing AI Houston - Production .htaccess
# Performance Optimization & Security Rules for Hostinger Hosting
# This file is designed for Apache servers (Hostinger uses Apache)
# 
# IMPORTANT: This file is for PRODUCTION use only when migrated to Hostinger
# GitHub Pages doesn't use Apache, so this file has no effect in development

# ============================================================================
# GZIP COMPRESSION - Reduce file sizes for faster loading
# ============================================================================

<IfModule mod_deflate.c>
    # Compress HTML, CSS, JavaScript, Text, XML and fonts
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE application/x-web-app-manifest+json
    AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml
    
    # Remove browser bugs (only needed for really old browsers)
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    Header append Vary User-Agent
</IfModule>

# ============================================================================
# BROWSER CACHING - Cache static files for better performance
# ============================================================================

<IfModule mod_expires.c>
    ExpiresActive on
    
    # Images - Cache for 1 year
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"
    
    # Video - Cache for 1 year
    ExpiresByType video/mp4 "access plus 1 year"
    ExpiresByType video/mpeg "access plus 1 year"
    
    # Fonts - Cache for 1 year
    ExpiresByType application/x-font-ttf "access plus 1 year"
    ExpiresByType font/opentype "access plus 1 year"
    ExpiresByType application/x-font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    ExpiresByType application/vnd.ms-fontobject "access plus 1 year"
    
    # CSS and JavaScript - Cache for 1 month
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    
    # HTML - Cache for 1 week
    ExpiresByType text/html "access plus 1 week"
    
    # XML files - Cache for 1 day
    ExpiresByType application/xml "access plus 1 day"
    ExpiresByType text/xml "access plus 1 day"
    
    # Default - Cache for 1 month
    ExpiresDefault "access plus 1 month"
</IfModule>

# Alternative cache headers for older Apache versions
<IfModule mod_headers.c>
    # Cache images for 1 year
    <FilesMatch "\.(ico|jpe?g|png|gif|webp|svg)$">
        Header set Cache-Control "max-age=31536000, public, immutable"
    </FilesMatch>
    
    # Cache CSS and JS for 1 month
    <FilesMatch "\.(css|js)$">
        Header set Cache-Control "max-age=2628000, public"
    </FilesMatch>
    
    # Cache HTML for 1 week
    <FilesMatch "\.(html)$">
        Header set Cache-Control "max-age=604800, public, must-revalidate"
    </FilesMatch>
</IfModule>

# ============================================================================
# SECURITY HEADERS - Basic security improvements
# ============================================================================

<IfModule mod_headers.c>
    # Prevent MIME type sniffing
    Header always set X-Content-Type-Options nosniff
    
    # Enable XSS protection
    Header always set X-XSS-Protection "1; mode=block"
    
    # Prevent clickjacking
    Header always set X-Frame-Options SAMEORIGIN
    
    # HTTPS only (uncomment when SSL is active on Hostinger)
    # Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    
    # Referrer policy for privacy
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Content Security Policy (basic - customize as needed)
    # Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
</IfModule>

# ============================================================================
# FILE ACCESS RESTRICTIONS - Protect sensitive files
# ============================================================================

# Deny access to .htaccess and other sensitive files
<Files ".htaccess">
    Order allow,deny
    Deny from all
</Files>

# Deny access to git files
<Files ".git*">
    Order allow,deny
    Deny from all
</Files>

# Deny access to development files
<Files "replit.md">
    Order allow,deny
    Deny from all
</Files>

<Files ".replit">
    Order allow,deny
    Deny from all
</Files>

# ============================================================================
# URL REDIRECTS & REWRITES - SEO and user experience
# ============================================================================

<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Force HTTPS (uncomment when SSL is active on Hostinger)
    # RewriteCond %{HTTPS} off
    # RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Force www subdomain (uncomment if you want to force www)
    # RewriteCond %{HTTP_HOST} !^www\. [NC]
    # RewriteRule ^(.*)$ https://www.%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Remove .html extension from URLs
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^([^\.]+)$ $1.html [NC,L]
    
    # Redirect .html extension to clean URLs
    RewriteCond %{THE_REQUEST} /([^.]+)\.html [NC]
    RewriteRule ^ /%1 [NC,L,R=301]
    
    # Custom 404 error page
    ErrorDocument 404 /404.html
</IfModule>

# ============================================================================
# PERFORMANCE OPTIMIZATIONS
# ============================================================================

# Disable server signature for security
ServerSignature Off

# Disable ETags for better caching
FileETag None

# Remove www from URLs (alternative to forcing www - choose one)
# <IfModule mod_rewrite.c>
#     RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
#     RewriteRule ^(.*)$ https://%1%{REQUEST_URI} [L,R=301]
# </IfModule>

# ============================================================================
# HOUSTON MARKETING SPECIFIC OPTIMIZATIONS
# ============================================================================

# Set default language for content
DefaultLanguage en-US

# Custom error pages for better user experience
ErrorDocument 403 /403.html
ErrorDocument 500 /500.html

# Optimize for mobile (already handled in CSS, but server-level hint)
<IfModule mod_headers.c>
    Header append Vary Accept-Encoding
    Header append Vary User-Agent
</IfModule>

# ============================================================================
# DEPLOYMENT CHECKLIST FOR HOSTINGER:
# ============================================================================
# 
# 1. Upload this file to the root directory of your domain
# 2. Test all redirects and ensure they work correctly
# 3. Enable SSL certificate in Hostinger control panel
# 4. Uncomment HTTPS redirect rules above
# 5. Test website performance with GTmetrix or PageSpeed Insights
# 6. Monitor server error logs for any issues
# 7. Update robots.txt to allow crawling
# 8. Submit updated sitemap to Google Search Console
# 9. Test all pages for proper caching headers
# 10. Verify security headers are working with securityheaders.com
#
# Note: Some rules may need adjustment based on Hostinger's specific 
# Apache configuration. Test thoroughly after deployment.